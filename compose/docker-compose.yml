version: "3"
services:

  hello-batch:
    image: hello-batch:0.1.0-SNAPSHOT
    depends_on:
      - spark-worker
      - hdfs-datanode
      - kafka
    environment:
      - "INPUT_TOPIC=names"
      - "OUTPUT_DIR=hdfs://hdfs-namenode/hello/"

  hello-streaming:
    image: hello-streaming:0.1.0-SNAPSHOT
    depends_on:
      - spark-worker
      - kafka
    environment:
      - "INPUT_TOPIC=names"
      - "OUTPUT_TOPIC=hello"



  spark-master:
    image: bde2020/spark-master:2.2.0-hadoop2.7
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark

  spark-worker:
    image: bde2020/spark-worker:2.2.0-hadoop2.7
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  hdfs-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - "50070:50070"

  hdfs-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    depends_on:
      - hdfs-namenode
    env_file:
      - ./hadoop.env
    ports:
      - "50075:50075"

  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.1
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'

  kafka:
    image: confluentinc/cp-kafka:4.1.1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'

  prometheus:
    image: prom/prometheus:v2.3.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
